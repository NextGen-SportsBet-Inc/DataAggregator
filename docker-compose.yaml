services:
  main_mq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - main_rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${MAIN_MQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${MAIN_MQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q status"]
      interval: 30s
      timeout: 10s
      retries: 5

  wrappers_mq:
    image: rabbitmq:3-management
    ports:
      - "5674:5672"
      - "15674:15672"
    volumes:
      - wrappers_rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${WRAPPERS_MQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${WRAPPERS_MQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q status"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5


  propagator:
    build:
      context: ./Propagator
      dockerfile: Dockerfile
    command: ["python", "src/main.py"]
    volumes:
      - ./Propagator:/app
    environment:
      - PYTHONUNBUFFERED=1
      - MAIN_MQ_DEFAULT_USER=${MAIN_MQ_DEFAULT_USER}
      - MAIN_MQ_DEFAULT_PASS=${MAIN_MQ_DEFAULT_PASS}
      - MAIN_MQ_HOST=${MAIN_MQ_HOST}
      - MAIN_MQ_PORT=${MAIN_MQ_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      main_mq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  main_rabbitmq_data:
    driver: local
  wrappers_rabbitmq_data:
    driver: local
  redis_data:
    driver: local